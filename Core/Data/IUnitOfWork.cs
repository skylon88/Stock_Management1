using System;
using System.Data.Entity;
using System.Threading.Tasks;

namespace Core.Data
{
    public interface IUnitOfWork : IDisposable
    {
        /// <summary>
        /// Gets the database context. DatabaseContext is part of EF and itself is implementation of UoW (and repo) patterns
        /// </summary>
        /// <value>
        /// The database context.
        /// </value>
        /// <remarks> 
        /// If true  UoW was implemented this wouldn't be here, but we are exposing this for simplicity sake. 
        /// For example so that repository  could use benefits of DbContext and DbSet <see cref="DbSet"/>. One of those benefits are Find and FindAsnyc methods
        /// </remarks>
        /// <autogeneratedoc />
        DbContext DatabaseContext { get; }

        /// <summary>
        /// Commits the changes to database
        /// </summary>
        /// <returns></returns>
        /// <autogeneratedoc />
        void Commit();

        /// <summary>
        /// Asynchronously commits changes to database.
        /// </summary>
        /// <returns></returns>
        /// <autogeneratedoc />
        Task CommitAsync();
    }
}
